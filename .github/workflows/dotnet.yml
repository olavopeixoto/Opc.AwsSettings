name: .NET

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 9.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Pack NuGet package
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: dotnet pack src/Opc.AwsSettings/Opc.AwsSettings.csproj --configuration Release --no-build --output ./artifacts

      - name: Get version from csproj
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        id: get_version
        run: |
          VERSION=$(grep -oP '(?<=<Version>)[^<]+' src/Opc.AwsSettings/Opc.AwsSettings.csproj)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/Opc.AwsSettings.${{ steps.get_version.outputs.version }}.nupkg
          asset_name: Opc.AwsSettings.${{ steps.get_version.outputs.version }}.nupkg
          asset_content_type: application/zip
